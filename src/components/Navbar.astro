---
import styles from './Navbar.module.css';
import LanguageSelector from './LanguageSelector.astro';
import { getLangFromUrl } from '../i18n/utils';

interface MenuItem {
  href: string;
  text: string;
  lang: {
    en: string;
    es: string;
    por: string;
  };
}

const menuItems: MenuItem[] = [
  { 
    href: '#inicio', 
    text: 'Inicio',
    lang: {
      en: 'Home',
      es: 'Inicio',
      por: 'Início'
    }
  },
  { 
    href: '#quienes-somos', 
    text: 'Quiénes Somos',
    lang: {
      en: 'About Us',
      es: 'Quiénes Somos',
      por: 'Quem Somos'
    }
  },
  { 
    href: '#servicios', 
    text: 'Servicios',
    lang: {
      en: 'Services',
      es: 'Servicios',
      por: 'Serviços'
    }
  },
  { 
    href: '#proyectos', 
    text: 'Proyectos',
    lang: {
      en: 'Projects',
      es: 'Proyectos',
      por: 'Projetos'
    }
  },
  { 
    href: '#contacto', 
    text: 'Contacto',
    lang: {
      en: 'Contact',
      es: 'Contacto',
      por: 'Contato'
    }
  }
];

const currentPath = Astro.url.pathname;
const { lang } = getLangFromUrl(Astro.url);
// Cambiar la expresión regular para detectar cualquier página bajo /projects (incluyendo /projects/[slug])
const isProjectsPage = /\/(en|es|pt)\/projects(\/.*)?\/?$/.test(currentPath);

function getNavHref(sectionId: string) {
  // Si estamos en /projects o en /projects/[slug], redirigir a la home del idioma con ancla
  if (isProjectsPage) {
    return `/${lang}/#${sectionId}`;
  }
  return `#${sectionId}`;
}
---

<nav class={styles.navbar} id="main-navbar">
  <div class={styles.container}>
    <a href="/" class={styles.logo}>
      <img 
        src="/img/logo_optimized.png" 
        alt="RGB Corp Logo" 
        width="150" 
        height="50"
        loading="eager"
      />
    </a>

    <button 
      class={styles.menuToggle} 
      id="menu-toggle-btn"  aria-label="Toggle menu"
      aria-expanded="false"
      aria-controls="nav-menu"
    >
      <span></span>
      <span></span>
      <span></span>
    </button>

    <div id="nav-menu" class="nav-menu"> 
      {menuItems.map((item, i) => (
        <a 
          href={getNavHref(item.href.replace('#', ''))}
          class:list={[styles.navLink, currentPath === item.href ? styles.active : 'nav-link']} data-lang-en={item.lang.en}
          data-lang-es={item.lang.es}
          data-lang-por={item.lang.por}
          data-aos="fade-down"
          data-aos-delay={100 + i * 50}
        >
          {lang === 'en' ? item.lang.en : lang === 'es' ? item.lang.es : item.lang.por}
        </a>
      ))}
      <div class="language-selector-mobile-wrapper">
        <LanguageSelector currentLang={lang} currentPath={Astro.url.pathname} />
      </div>
    </div>
  </div>
</nav>
<div class="menu-overlay" id="menu-overlay"></div>

<style>
  .navbar {
    background-color: var(--color-secondary);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    position: static;
    width: 100%;
    z-index: 1000;
  }

  .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    padding: var(--spacing-sm) var(--spacing-md);
  }

  .logo img {
    height: 80px;
    width: auto;
    max-width: 200px;
    object-fit: contain;
    display: block;
    align-self: center;
  }

  .nav-menu {
    display: flex;
    gap: var(--spacing-lg);
    align-items: center;
    z-index: 2000;
  }

  .nav-link {
    color: var(--color-primary);
    font-weight: 500;
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: 4px;
    transition: all 0.3s ease;
  }

  .nav-link.active { /* Definimos la clase active aquí */
    background-color: rgba(0, 0, 0, 0.1);
    color: var(--color-accent);
  }

  .nav-link:hover {
    color: var(--color-accent);
    background-color: rgba(0, 0, 0, 0.05);
  }

  .menu-toggle {
    display: none;
    flex-direction: column;
    gap: 6px;
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--spacing-xs);
  }

  .menu-toggle span {
    display: block;
    width: 25px;
    height: 2px;
    background-color: var(--color-primary);
    transition: all 0.3s ease;
  }

  @media (max-width: 768px) {
    .menu-toggle {
      display: flex;
    }

    .nav-menu {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background-color: var(--color-secondary);
      padding: var(--spacing-md);
      flex-direction: column;
      gap: var(--spacing-sm);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      z-index: 2000;
    }

    .nav-menu.active {
      display: flex;
    }

    .nav-link {
      padding: var(--spacing-sm);
      width: 100%;
      text-align: center;
    }
    .language-selector-mobile-wrapper {
      margin-top: 16px;
      display: flex;
      justify-content: center;
    }
    .menu-overlay {
      display: none;
      position: fixed;
      z-index: 999;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(255,255,255,0.5);
      backdrop-filter: blur(4px);
      transition: opacity 0.3s;
      opacity: 0;
    }
    .menu-overlay.active {
      display: block;
      opacity: 1;
    }
    .logo img {
      height: 108px;
      max-width: 270px;
    }
  }

  @media (min-width: 769px) and (max-width: 1300px) {
    .nav-menu {
      display: flex;
      gap: var(--spacing-md);
      align-items: center;
      flex-wrap: wrap;
      justify-content: flex-end;
    }

    .language-selector-mobile-wrapper {
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-width: 160px;
    }

    .nav-link {
      padding: var(--spacing-xs) var(--spacing-sm);
      white-space: nowrap;
    }
  }
</style>

<script>
  // Toggle menu en móvil
  // Usamos los IDs que agregamos/ya existen
  const menuToggle = document.getElementById('menu-toggle-btn');
  const navMenu = document.getElementById('nav-menu');
  // navMenu ahora tiene clase 'nav-menu'
  const menuOverlay = document.getElementById('menu-overlay');

  if (menuToggle && navMenu) {
    menuToggle.addEventListener('click', () => {
      navMenu.classList.toggle('active');
      if (menuOverlay) menuOverlay.classList.toggle('active');
      const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
      menuToggle.setAttribute('aria-expanded', (!isExpanded).toString());
    });
  }

  // Cerrar menú al hacer click en un enlace
  document.querySelectorAll('.nav-link').forEach(link => { 
    link.addEventListener('click', () => {
      navMenu?.classList.remove('active');
      if (menuOverlay) menuOverlay.classList.remove('active');
      menuToggle?.setAttribute('aria-expanded', 'false');
    });
  });

  // Cerrar menú al hacer click fuera
  document.addEventListener('click', (e) => {
    // CAMBIO AQUÍ: Seleccionamos la navbar por su ID
    const navbarContainer = document.getElementById('main-navbar'); 

    if (
      navMenu?.classList.contains('active') &&
      navbarContainer && 
      !navbarContainer.contains(e.target as Node)
    ) {
      navMenu.classList.remove('active');
      if (menuOverlay) menuOverlay.classList.remove('active');
      menuToggle?.setAttribute('aria-expanded', 'false');
    }
  });

  // Actualizar textos según el idioma seleccionado
  const updateMenuTexts = (lang: string) => {
    document.querySelectorAll('.nav-link').forEach(link => { 
      const text = link.getAttribute(`data-lang-${lang.toLowerCase()}`);
      if (text) link.textContent = text;
    });
  };

  // Escuchar cambios en el idioma
  document.addEventListener('languageChanged', ((e: CustomEvent) => {
    updateMenuTexts(e.detail.lang);
  }) as EventListener);
</script>