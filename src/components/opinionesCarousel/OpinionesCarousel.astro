---
import { getLangFromUrl, useTranslations } from '../../i18n/utils';
import type { Language } from '../../i18n/utils';
import './OpinionesCarousel.css';

interface Props {
  lang?: Language;
}

interface Review {
  id: number;
  iframeSrc: string;
}

const { lang } = Astro.props;
const currentLang = (lang || getLangFromUrl(Astro.url)) as Language;
const t = useTranslations(currentLang);

// Datos de ejemplo - Reemplazar con datos reales
const reviews: Review[] = [
  {
    id: 1,
    iframeSrc: "https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fmary.daboin.romero%2Fposts%2Fpfbid02sMyKmK7dKadMtpGH3eKdadTf54wK75BdJ2npvqqqbucUg5DKS7xndY8aeiUpcMRXl&show_text=true&width=500"
  },
  {
    id: 2,
    iframeSrc: "https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fluduena.jugi%2Fposts%2Fpfbid02g3wth84YSmHXHm9xDxnbqQuytSciXoCfVVZb6CCiSatQjy3tXjEJCQWPBXjNBCBbl&show_text=true&width=500"
  },
  {
    id: 3,
    iframeSrc: "https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fadrian.quesada.3597%2Fposts%2Fpfbid0rKMwDHmyMDEuf198mCe2nfd8q1yA3y5EZsgAjBxvX5gMcNsc68KiSt2rMc73bnXql&show_text=true&width=500"
  }
];

const itemsPerSlide = 3;
const opinionGroups = reviews.reduce((acc, _, index) => 
  index % itemsPerSlide === 0 ? [...acc, reviews.slice(index, index + itemsPerSlide)] : acc, 
[] as Review[][]);
---

<section id="reviews-section" class="opinionesSection" data-aos="fade-up">
  <h2 data-aos="fade-up" data-aos-delay="100">{t('Reviews.title')}</h2>
  {opinionGroups.length > 0 ? (
    <div class="carouselContainer" data-aos="fade-up" data-aos-delay="200">
      <div class="opinionesGrid" data-aos="fade-up" data-aos-delay="300">
        {opinionGroups[0].map((rev, index) => (
          <div class="fadeIn" data-id={rev.id} data-aos="fade-up" data-aos-delay={400 + index * 100}>
            <div class="facebook-iframe-card" style="cursor: pointer; width: 100%; max-width: 500px;">
              <iframe
                src={rev.iframeSrc}
                width="100%"
                height="250"
                style="border: none; overflow: hidden;"
                scrolling="no"
                frameborder="0"
                allowfullscreen
                allow="autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share"
              ></iframe>
            </div>
          </div>
        ))}
      </div>

      {opinionGroups.length > 1 && (
        <>
          <button class="carouselControlPrev" id="prevButton" data-aos="fade-right" data-aos-delay="500">
            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="currentColor">
              <path d="M16.293 9.293L12 13.586 7.707 9.293l-1.414 1.414L12 16.414l5.707-5.707z"/>
            </svg>
          </button>
          <button class="carouselControlNext" id="nextButton" data-aos="fade-left" data-aos-delay="500">
            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="currentColor">
              <path d="M7.707 14.707L12 10.414l4.293 4.293 1.414-1.414L12 7.586 6.293 13.293z"/>
            </svg>
          </button>
        </>
      )}
    </div>
  ) : (
    <p class="text-center" data-aos="fade-up" data-aos-delay="200">{t('Reviews.noComments')}</p>
  )}
</section>

<script define:vars={{ opinionGroups }}>
  let currentSlide = 0;
  const prevButton = document.getElementById('prevButton');
  const nextButton = document.getElementById('nextButton');
  const opinionesGrid = document.querySelector('.opinionesGrid');

  const updateSlide = (newSlide) => {
    currentSlide = newSlide;
    if (opinionesGrid) {
      opinionesGrid.innerHTML = opinionGroups[currentSlide].map(rev => `
        <div class="fadeIn" data-id="${rev.id}">
          <div class="facebook-iframe-card" style="cursor: pointer; width: 100%; max-width: 500px;">
            <iframe
              src="${rev.iframeSrc}"
              width="100%"
              height="250"
              style="border: none; overflow: hidden;"
              scrolling="no"
              frameborder="0"
              allowfullscreen
              allow="autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share"
            ></iframe>
          </div>
        </div>
      `).join('');
    }
  };

  prevButton?.addEventListener('click', () => {
    const newSlide = (currentSlide - 1 + opinionGroups.length) % opinionGroups.length;
    updateSlide(newSlide);
  });

  nextButton?.addEventListener('click', () => {
    const newSlide = (currentSlide + 1) % opinionGroups.length;
    updateSlide(newSlide);
  });
</script>

<style>
  .testimonials {
    padding: 4rem 0;
    background-color: var(--color-background);
  }

  .testimonials h2 {
    text-align: center;
    margin-bottom: 3rem;
    color: var(--color-text);
  }

  .testimonials-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .testimonial-card {
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s;
  }

  .testimonial-card:hover {
    transform: translateY(-5px);
  }

  .testimonial-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .testimonial-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .testimonial-content {
    padding: 1.5rem;
  }

  .testimonial-text {
    color: var(--color-text);
    margin-bottom: 1rem;
    font-style: italic;
  }

  .testimonial-author h4 {
    color: var(--color-primary);
    margin: 0;
  }

  .testimonial-author p {
    color: var(--color-text-light);
    margin: 0;
    font-size: 0.9rem;
  }

  @media (max-width: 768px) {
    .testimonials-container {
      grid-template-columns: 1fr;
    }
  }
</style> 